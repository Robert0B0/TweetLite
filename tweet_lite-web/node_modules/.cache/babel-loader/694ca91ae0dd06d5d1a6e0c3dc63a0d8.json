{"ast":null,"code":"var _jsxFileName = \"F:\\\\Study\\\\010 Programming learning\\\\@React Js\\\\TweetLite\\\\tweet_lite-web\\\\src\\\\tweets\\\\list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { apiTweetList } from \"./lookup\";\nimport { Tweet } from \"./detail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsList(props) {\n  _s();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updatedTweetsInit = [...tweetsInit];\n    updatedTweetsInit.unshift(newTweet);\n    setTweetsInit(updatedTweetsInit);\n    const updatedFinalTweets = [...tweets];\n    updatedFinalTweets.unshift(tweets);\n    setTweets(updatedFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-item.id`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  });\n}\n\n_s(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c = TweetsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetsList\");","map":{"version":3,"sources":["F:/Study/010 Programming learning/@React Js/TweetLite/tweet_lite-web/src/tweets/list.js"],"names":["React","useState","useEffect","apiTweetList","Tweet","TweetsList","props","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","length","handleTweetListLookup","response","status","alert","username","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,KAAT,QAAsB,UAAtB;;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,KAAK,GAAG,CAAC,GAAGP,KAAK,CAACQ,SAAV,EAAqBC,MAArB,CAA4BR,UAA5B,CAAd;;AACA,QAAIM,KAAK,CAACG,MAAN,KAAiBP,MAAM,CAACO,MAA5B,EAAoC;AACnCN,MAAAA,SAAS,CAACG,KAAD,CAAT;AACA;AACD,GALQ,EAKN,CAACP,KAAK,CAACQ,SAAP,EAAkBL,MAAlB,EAA0BF,UAA1B,CALM,CAAT;AAOAL,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,YAAY,KAAK,KAArB,EAA4B;AAC3B,YAAMM,qBAAqB,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACnD,YAAIA,MAAM,KAAK,GAAf,EAAoB;AACnBX,UAAAA,aAAa,CAACU,QAAD,CAAb;AACAN,UAAAA,eAAe,CAAC,IAAD,CAAf;AACA,SAHD,MAGO;AACNQ,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACA;AACD,OAPD;;AAQAjB,MAAAA,YAAY,CAACG,KAAK,CAACe,QAAP,EAAiBJ,qBAAjB,CAAZ;AACA;AACD,GAZQ,EAYN,CAACV,UAAD,EAAaI,YAAb,EAA2BC,eAA3B,EAA4CN,KAAK,CAACe,QAAlD,CAZM,CAAT;;AAcA,QAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACtC,UAAMC,iBAAiB,GAAG,CAAC,GAAGjB,UAAJ,CAA1B;AACAiB,IAAAA,iBAAiB,CAACC,OAAlB,CAA0BF,QAA1B;AACAf,IAAAA,aAAa,CAACgB,iBAAD,CAAb;AAEA,UAAME,kBAAkB,GAAG,CAAC,GAAGjB,MAAJ,CAA3B;AACAiB,IAAAA,kBAAkB,CAACD,OAAnB,CAA2BhB,MAA3B;AACAC,IAAAA,SAAS,CAACgB,kBAAD,CAAT;AACA,GARD;;AAUA,SAAOjB,MAAM,CAACkB,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,wBACC,QAAC,KAAD;AACC,MAAA,KAAK,EAAED,IADR;AAEC,MAAA,UAAU,EAAEN,gBAFb;AAIC,MAAA,SAAS,EAAC;AAJX,OAGO,GAAEO,KAAM,UAHf;AAAA;AAAA;AAAA;AAAA,YADD;AAQA,GATM,CAAP;AAUA;;GA9CexB,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetsList(props) {\r\n\tconst [tweetsInit, setTweetsInit] = useState([]);\r\n\tconst [tweets, setTweets] = useState([]);\r\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst final = [...props.newTweets].concat(tweetsInit);\r\n\t\tif (final.length !== tweets.length) {\r\n\t\t\tsetTweets(final);\r\n\t\t}\r\n\t}, [props.newTweets, tweets, tweetsInit]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tweetsDidSet === false) {\r\n\t\t\tconst handleTweetListLookup = (response, status) => {\r\n\t\t\t\tif (status === 200) {\r\n\t\t\t\t\tsetTweetsInit(response);\r\n\t\t\t\t\tsetTweetsDidSet(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"There was an error\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tapiTweetList(props.username, handleTweetListLookup);\r\n\t\t}\r\n\t}, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n\tconst handleDidRetweet = (newTweet) => {\r\n\t\tconst updatedTweetsInit = [...tweetsInit];\r\n\t\tupdatedTweetsInit.unshift(newTweet);\r\n\t\tsetTweetsInit(updatedTweetsInit);\r\n\r\n\t\tconst updatedFinalTweets = [...tweets];\r\n\t\tupdatedFinalTweets.unshift(tweets);\r\n\t\tsetTweets(updatedFinalTweets);\r\n\t};\r\n\r\n\treturn tweets.map((item, index) => {\r\n\t\treturn (\r\n\t\t\t<Tweet\r\n\t\t\t\ttweet={item}\r\n\t\t\t\tdidRetweet={handleDidRetweet}\r\n\t\t\t\tkey={`${index}-item.id`}\r\n\t\t\t\tclassName=\"my-5 py-5 border bg-white text-dark\"\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}