{"ast":null,"code":"var _jsxFileName = \"F:\\\\Study\\\\010 Programming learning\\\\@React Js\\\\TweetLite\\\\tweet_lite-web\\\\src\\\\tweets\\\\components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { apiTweetCreate, apiTweetList, apiTweetAction } from \"./lookup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TweetsComponent(props) {\n  _s();\n\n  const textAreaRef = /*#__PURE__*/React.createRef();\n  const [newTweets, setNewTweets] = useState([]);\n  const canTweet = prop.canTweet === \"false\" ? false : true;\n\n  const handleBackendUpdate = (response, status) => {\n    // backend api response handler\n    let tempNewTweets = [...newTweets];\n\n    if (status === 201) {\n      tempNewTweets.unshift(response);\n      setNewTweets(tempNewTweets);\n    } else {\n      console.log(response);\n      alert(\"an error occured, please try again\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value; // backend api request handler\n\n    apiTweetCreate(newVal, handleBackendUpdate);\n    textAreaRef.current.value = \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textAreaRef,\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success my-3\",\n          children: \"Tweet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TweetsList, {\n      newTweets: newTweets,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TweetsComponent, \"eTGRY+yoVKzXSNpIrTNW6k5cGM0=\");\n\n_c = TweetsComponent;\nexport function TweetsList(props) {\n  _s2();\n\n  const [tweetsInit, setTweetsInit] = useState([]);\n  const [tweets, setTweets] = useState([]);\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\n  useEffect(() => {\n    const final = [...props.newTweets].concat(tweetsInit);\n\n    if (final.length !== tweets.length) {\n      setTweets(final);\n    }\n  }, [props.newTweets, tweets, tweetsInit]);\n  useEffect(() => {\n    if (tweetsDidSet === false) {\n      const handleTweetListLookup = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response);\n          setTweetsDidSet(true);\n        } else {\n          alert(\"There was an error\");\n        }\n      };\n\n      apiTweetList(props.username, handleTweetListLookup);\n    }\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n  const handleDidRetweet = newTweet => {\n    const updatedTweetsInit = [...tweetsInit];\n    updatedTweetsInit.unshift(newTweet);\n    setTweetsInit(updatedTweetsInit);\n    const updatedFinalTweets = [...tweets];\n    updatedFinalTweets.unshift(tweets);\n    setTweets(updatedFinalTweets);\n  };\n\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Tweet, {\n      tweet: item,\n      didRetweet: handleDidRetweet,\n      className: \"my-5 py-5 border bg-white text-dark\"\n    }, `${index}-item.id`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this);\n  });\n}\n\n_s2(TweetsList, \"P6qXvmm+5AyDsJ0n/lMk6wZyO4Q=\");\n\n_c2 = TweetsList;\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action,\n    didPerformAction\n  } = props;\n  const likes = tweet.likes ? tweet.likes : 0;\n  const className = props.className ? props.className : \"btn btn-success btn-sm\";\n  const actionDisplay = action.display ? action.display : \"Action\";\n\n  const handleBackendEvent = (response, status) => {\n    if ((status === 200 || status === 201) && didPerformAction) {\n      didPerformAction(response, status);\n    }\n  };\n\n  const handleClick = event => {\n    event.preventDefault();\n    apiTweetAction(tweet.id, action.type, handleBackendEvent);\n  };\n\n  const display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: className,\n    onClick: handleClick,\n    children: display\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 3\n  }, this);\n}\n_c3 = ActionBtn;\nexport function ParentTweet(props) {\n  const {\n    tweet\n  } = props;\n  return tweet.parent ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-11 mx-auto p-3 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0 text-muted sm\",\n        children: \"Retweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Tweet, {\n        hideActions: true,\n        className: \" \",\n        tweet: tweet.parent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 3\n  }, this) : null;\n}\n_c4 = ParentTweet;\nexport function Tweet(props) {\n  _s3();\n\n  const {\n    tweet,\n    didRetweet,\n    hideActions\n  } = props;\n  const className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet);\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [tweet.id, \" - \", tweet.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ParentTweet, {\n      tweet: tweet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this), actionTweet && hideActions !== true && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn btn-group\",\n      children: [/*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"like\",\n          display: \"Like\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"unlike\",\n          display: \"UnLike\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ActionBtn, {\n        tweet: actionTweet,\n        didPerformAction: handlePerformAction,\n        action: {\n          type: \"retweet\",\n          display: \"Retweet\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 3\n  }, this);\n}\n\n_s3(Tweet, \"4XwhAxG+zaKvQWj4Pjf6LY5//hs=\");\n\n_c5 = Tweet;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"TweetsComponent\");\n$RefreshReg$(_c2, \"TweetsList\");\n$RefreshReg$(_c3, \"ActionBtn\");\n$RefreshReg$(_c4, \"ParentTweet\");\n$RefreshReg$(_c5, \"Tweet\");","map":{"version":3,"sources":["F:/Study/010 Programming learning/@React Js/TweetLite/tweet_lite-web/src/tweets/components.js"],"names":["React","useState","useEffect","apiTweetCreate","apiTweetList","apiTweetAction","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","canTweet","prop","handleBackendUpdate","response","status","tempNewTweets","unshift","console","log","alert","handleSubmit","event","preventDefault","newVal","current","value","className","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","final","concat","length","handleTweetListLookup","username","handleDidRetweet","newTweet","updatedTweetsInit","updatedFinalTweets","map","item","index","ActionBtn","tweet","action","didPerformAction","likes","actionDisplay","display","handleBackendEvent","handleClick","id","type","ParentTweet","parent","Tweet","didRetweet","hideActions","actionTweet","setActionTweet","handlePerformAction","newActionTweet","content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { apiTweetCreate, apiTweetList, apiTweetAction } from \"./lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n\tconst textAreaRef = React.createRef();\r\n\tconst [newTweets, setNewTweets] = useState([]);\r\n\tconst canTweet = prop.canTweet === \"false\" ? false : true;\r\n\r\n\tconst handleBackendUpdate = (response, status) => {\r\n\t\t// backend api response handler\r\n\t\tlet tempNewTweets = [...newTweets];\r\n\t\tif (status === 201) {\r\n\t\t\ttempNewTweets.unshift(response);\r\n\t\t\tsetNewTweets(tempNewTweets);\r\n\t\t} else {\r\n\t\t\tconsole.log(response);\r\n\t\t\talert(\"an error occured, please try again\");\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst newVal = textAreaRef.current.value;\r\n\t\t// backend api request handler\r\n\t\tapiTweetCreate(newVal, handleBackendUpdate);\r\n\t\ttextAreaRef.current.value = \"\";\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={props.className}>\r\n\t\t\t<div className=\"col-12 mb-3\">\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<textarea ref={textAreaRef} required={true} className=\"form-control\"></textarea>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success my-3\">\r\n\t\t\t\t\t\tTweet\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<TweetsList newTweets={newTweets} {...props} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function TweetsList(props) {\r\n\tconst [tweetsInit, setTweetsInit] = useState([]);\r\n\tconst [tweets, setTweets] = useState([]);\r\n\tconst [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst final = [...props.newTweets].concat(tweetsInit);\r\n\t\tif (final.length !== tweets.length) {\r\n\t\t\tsetTweets(final);\r\n\t\t}\r\n\t}, [props.newTweets, tweets, tweetsInit]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tweetsDidSet === false) {\r\n\t\t\tconst handleTweetListLookup = (response, status) => {\r\n\t\t\t\tif (status === 200) {\r\n\t\t\t\t\tsetTweetsInit(response);\r\n\t\t\t\t\tsetTweetsDidSet(true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"There was an error\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tapiTweetList(props.username, handleTweetListLookup);\r\n\t\t}\r\n\t}, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n\tconst handleDidRetweet = (newTweet) => {\r\n\t\tconst updatedTweetsInit = [...tweetsInit];\r\n\t\tupdatedTweetsInit.unshift(newTweet);\r\n\t\tsetTweetsInit(updatedTweetsInit);\r\n\r\n\t\tconst updatedFinalTweets = [...tweets];\r\n\t\tupdatedFinalTweets.unshift(tweets);\r\n\t\tsetTweets(updatedFinalTweets);\r\n\t};\r\n\r\n\treturn tweets.map((item, index) => {\r\n\t\treturn (\r\n\t\t\t<Tweet\r\n\t\t\t\ttweet={item}\r\n\t\t\t\tdidRetweet={handleDidRetweet}\r\n\t\t\t\tkey={`${index}-item.id`}\r\n\t\t\t\tclassName=\"my-5 py-5 border bg-white text-dark\"\r\n\t\t\t/>\r\n\t\t);\r\n\t});\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n\tconst { tweet, action, didPerformAction } = props;\r\n\tconst likes = tweet.likes ? tweet.likes : 0;\r\n\tconst className = props.className ? props.className : \"btn btn-success btn-sm\";\r\n\tconst actionDisplay = action.display ? action.display : \"Action\";\r\n\r\n\tconst handleBackendEvent = (response, status) => {\r\n\t\tif ((status === 200 || status === 201) && didPerformAction) {\r\n\t\t\tdidPerformAction(response, status);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tapiTweetAction(tweet.id, action.type, handleBackendEvent);\r\n\t};\r\n\tconst display = action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n\r\n\treturn (\r\n\t\t<button className={className} onClick={handleClick}>\r\n\t\t\t{display}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function ParentTweet(props) {\r\n\tconst { tweet } = props;\r\n\r\n\treturn tweet.parent ? (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col-11 mx-auto p-3 border rounded\">\r\n\t\t\t\t<p className=\"mb-0 text-muted sm\">Retweet</p>\r\n\t\t\t\t<Tweet hideActions className={\" \"} tweet={tweet.parent} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t) : null;\r\n}\r\n\r\nexport function Tweet(props) {\r\n\tconst { tweet, didRetweet, hideActions } = props;\r\n\tconst className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n\tconst [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\r\n\r\n\tconst handlePerformAction = (newActionTweet, status) => {\r\n\t\tif (status === 200) {\r\n\t\t\tsetActionTweet(newActionTweet);\r\n\t\t} else if (status === 201) {\r\n\t\t\tif (didRetweet) {\r\n\t\t\t\tdidRetweet(newActionTweet);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t<div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{tweet.id} - {tweet.content}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<ParentTweet tweet={tweet} />\r\n\t\t\t{actionTweet && hideActions !== true && (\r\n\t\t\t\t<div className=\"btn btn-group\">\r\n\t\t\t\t\t<ActionBtn\r\n\t\t\t\t\t\ttweet={actionTweet}\r\n\t\t\t\t\t\tdidPerformAction={handlePerformAction}\r\n\t\t\t\t\t\taction={{ type: \"like\", display: \"Like\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ActionBtn\r\n\t\t\t\t\t\ttweet={actionTweet}\r\n\t\t\t\t\t\tdidPerformAction={handlePerformAction}\r\n\t\t\t\t\t\taction={{ type: \"unlike\", display: \"UnLike\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ActionBtn\r\n\t\t\t\t\t\ttweet={actionTweet}\r\n\t\t\t\t\t\tdidPerformAction={handlePerformAction}\r\n\t\t\t\t\t\taction={{ type: \"retweet\", display: \"Retweet\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}